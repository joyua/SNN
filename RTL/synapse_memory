`timescale 1ns / 1ps

module synapse_memory #(
    parameter DATA_WIDTH  = 8,
    parameter DEPTH       = 10000,
    parameter ADDR_WIDTH  = 14  // 2^14 = 16384 >= 10000
)(
    input   wire                        clk,
    input   wire                        rst_n,

    // Read Port
    input   wire [ADDR_WIDTH-1:0]       i_read_addr,
    output  reg  [DATA_WIDTH-1:0]       o_read_weight,

    // Write Port (향후 실시간 로딩 기능을 위해 남겨둠)
    input   wire                        i_write_en,
    input   wire [ADDR_WIDTH-1:0]       i_write_addr,
    input   wire [DATA_WIDTH-1:0]       i_write_data
);

    // 10,000 x 8-bit 크기의 메모리 배열
    reg [DATA_WIDTH-1:0] mem [0:DEPTH-1];

    // `$readmemh`를 사용한 메모리 초기화
    initial begin
        $readmemh("weight_init.hex", mem);
    end

    // 동기식 읽기 및 쓰기 로직
    always @(posedge clk) begin
        // 동기식 읽기: 주소를 받은 다음 클럭에 데이터 출력
        o_read_weight <= mem[i_read_addr];

        // 동기식 쓰기: 쓰기 신호가 활성화되면 데이터 쓰기
        if (i_write_en) begin
            mem[i_write_addr] <= i_write_data;
        end
    end

endmodule
